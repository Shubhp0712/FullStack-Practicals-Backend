<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Income Calculation Results | Professional Tax Tool</title>
    <link rel="stylesheet" href="/style.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="icon" type="image/svg+xml"
        href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='%231e40af'%3E%3Cpath d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z'/%3E%3C/svg%3E">
    <style>
        /* Results Page Specific Styles */
        .results-container {
            max-width: 700px;
            margin: 0 auto;
            padding: 2rem;
            animation: fadeInUp 0.8s ease-out;
        }

        .results-header {
            text-align: center;
            margin-bottom: 3rem;
        }

        .success-icon {
            width: 80px;
            height: 80px;
            background: linear-gradient(135deg, var(--success-color), var(--primary-color));
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1.5rem;
            box-shadow: var(--shadow-lg);
            animation: successPulse 2s ease-in-out infinite;
        }

        .success-icon svg {
            width: 40px;
            height: 40px;
            color: white;
        }

        @keyframes successPulse {

            0%,
            100% {
                transform: scale(1);
            }

            50% {
                transform: scale(1.05);
            }
        }

        .results-title {
            font-size: 2.25rem;
            font-weight: 700;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
            background: linear-gradient(135deg, var(--success-color), var(--primary-color));
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .results-subtitle {
            font-size: 1.125rem;
            color: var(--text-secondary);
            font-weight: 400;
        }

        .calculation-card {
            background: var(--bg-glass);
            backdrop-filter: blur(20px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            border-radius: var(--radius-2xl);
            padding: 2.5rem;
            box-shadow: var(--shadow-xl);
            margin-bottom: 2rem;
        }

        .income-breakdown {
            display: grid;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .income-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.25rem;
            background: rgba(255, 255, 255, 0.5);
            border-radius: var(--radius-lg);
            border: 1px solid var(--border-color);
            transition: var(--transition);
        }

        .income-item:hover {
            background: rgba(255, 255, 255, 0.8);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .income-label {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            font-weight: 600;
            color: var(--text-primary);
        }

        .income-icon {
            width: 24px;
            height: 24px;
            padding: 6px;
            background: var(--primary-color);
            color: white;
            border-radius: var(--radius-sm);
        }

        .income-value {
            font-size: 1.25rem;
            font-weight: 700;
            color: var(--primary-color);
        }

        .total-section {
            padding: 2rem;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            border-radius: var(--radius-xl);
            text-align: center;
            color: white;
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .total-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            animation: shine 3s infinite;
        }

        @keyframes shine {
            0% {
                transform: translateX(-100%) translateY(-100%);
            }

            50% {
                transform: translateX(100%) translateY(100%);
            }

            100% {
                transform: translateX(-100%) translateY(-100%);
            }
        }

        .total-label {
            font-size: 1.125rem;
            font-weight: 500;
            margin-bottom: 0.5rem;
            opacity: 0.9;
        }

        .total-amount {
            font-size: 3rem;
            font-weight: 800;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            position: relative;
            z-index: 1;
        }

        .insights-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .insight-card {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: var(--radius-lg);
            padding: 1.5rem;
            text-align: center;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
        }

        .insight-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }

        .insight-number {
            font-size: 2rem;
            font-weight: 700;
            color: var(--primary-color);
            margin-bottom: 0.5rem;
        }

        .insight-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
            font-weight: 500;
        }

        .actions-section {
            display: flex;
            gap: 1rem;
            justify-content: center;
            flex-wrap: wrap;
        }

        .action-btn {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            padding: 1rem 2rem;
            border-radius: var(--radius-lg);
            text-decoration: none;
            font-weight: 600;
            transition: var(--transition);
            box-shadow: var(--shadow-md);
        }

        .action-btn.primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .action-btn.secondary {
            background: var(--bg-secondary);
            color: var(--primary-color);
            border: 2px solid var(--primary-color);
        }

        .action-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .action-btn svg {
            width: 20px;
            height: 20px;
        }

        /* Chart Visualization */
        .chart-container {
            background: var(--bg-secondary);
            border: 1px solid var(--border-color);
            border-radius: var(--radius-lg);
            padding: 2rem;
            margin-bottom: 2rem;
        }

        .chart-title {
            font-size: 1.25rem;
            font-weight: 600;
            color: var(--text-primary);
            margin-bottom: 1.5rem;
            text-align: center;
        }

        .visual-chart {
            display: flex;
            height: 200px;
            align-items: end;
            justify-content: center;
            gap: 2rem;
            margin-bottom: 1rem;
        }

        .chart-bar {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 0.5rem;
        }

        .bar {
            width: 60px;
            background: linear-gradient(to top, var(--primary-color), var(--secondary-color));
            border-radius: var(--radius-sm) var(--radius-sm) 0 0;
            display: flex;
            align-items: end;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 0.875rem;
            padding: 0.5rem 0;
            animation: growUp 1s ease-out forwards;
            transform-origin: bottom;
        }

        @keyframes growUp {
            from {
                transform: scaleY(0);
            }

            to {
                transform: scaleY(1);
            }
        }

        .bar-label {
            font-size: 0.875rem;
            color: var(--text-secondary);
            font-weight: 500;
            text-align: center;
        }

        /* Responsive Design */
        @media (max-width: 640px) {
            .results-container {
                padding: 1rem;
            }

            .calculation-card {
                padding: 1.5rem;
            }

            .total-amount {
                font-size: 2.25rem;
            }

            .actions-section {
                flex-direction: column;
                align-items: center;
            }

            .action-btn {
                width: 100%;
                justify-content: center;
                max-width: 300px;
            }

            .visual-chart {
                gap: 1rem;
            }

            .bar {
                width: 50px;
            }
        }
    </style>
</head>

<body>
    <div class="results-container">
        <!-- Results Header -->
        <div class="results-header">
            <div class="success-icon">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
            </div>
            <h1 class="results-title">Tax Calculation Complete!</h1>
            <p class="results-subtitle">Here's your comprehensive income and tax breakdown</p>
        </div>

        <!-- Calculation Results -->
        <div class="calculation-card">
            <!-- Income Breakdown -->
            <div class="income-breakdown">
                <div class="income-item">
                    <div class="income-label">
                        <svg class="income-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        Primary Income Source
                    </div>
                    <div class="income-value">$<%= parseFloat(income1).toLocaleString('en-US', {minimumFractionDigits:
                            2, maximumFractionDigits: 2}) %>
                    </div>
                </div>

                <div class="income-item">
                    <div class="income-label">
                        <svg class="income-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 6V4m0 2a2 2 0 100 4m0-4a2 2 0 110 4m-6 8a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4m6 6v10m6-2a2 2 0 100-4m0 4a2 2 0 100 4m0-4v2m0-6V4" />
                        </svg>
                        Secondary Income Source
                    </div>
                    <div class="income-value">$<%= parseFloat(income2).toLocaleString('en-US', {minimumFractionDigits:
                            2, maximumFractionDigits: 2}) %>
                    </div>
                </div>

                <div class="income-item gross-income">
                    <div class="income-label">
                        <svg class="income-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1" />
                        </svg>
                        Total Gross Income
                    </div>
                    <div class="income-value">$<%= parseFloat(grossIncome).toLocaleString('en-US',
                            {minimumFractionDigits: 2, maximumFractionDigits: 2}) %>
                    </div>
                </div>

                <div class="income-item tax-deduction">
                    <div class="income-label">
                        <svg class="income-icon" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z" />
                        </svg>
                        Tax Deduction (<%= parseFloat(taxRate).toFixed(1) %>%)
                    </div>
                    <div class="income-value tax-amount">-$<%= parseFloat(taxAmount).toLocaleString('en-US',
                            {minimumFractionDigits: 2, maximumFractionDigits: 2}) %>
                    </div>
                </div>
            </div>

            <!-- Total Income -->
            <div class="total-section">
                <div class="total-label">Net Income After Tax</div>
                <div class="total-amount">$<%= parseFloat(netIncome).toLocaleString('en-US', {minimumFractionDigits: 2,
                        maximumFractionDigits: 2}) %>
                </div>
            </div>

            <!-- Visual Chart -->
            <div class="chart-container">
                <h3 class="chart-title">Income & Tax Breakdown</h3>
                <div class="visual-chart">
                    <div class="chart-bar">
                        <div class="bar income-bar"
                            style="height: <%= Math.max(20, (parseFloat(grossIncome) / parseFloat(grossIncome)) * 150) %>px;">
                            100%
                        </div>
                        <div class="bar-label">Gross<br>Income</div>
                    </div>
                    <div class="chart-bar">
                        <div class="bar tax-bar"
                            style="height: <%= Math.max(20, (parseFloat(taxAmount) / parseFloat(grossIncome)) * 150) %>px;">
                            <%= Math.round((parseFloat(taxAmount) / parseFloat(grossIncome)) * 100) %>%
                        </div>
                        <div class="bar-label">Tax<br>Amount</div>
                    </div>
                    <div class="chart-bar">
                        <div class="bar net-bar"
                            style="height: <%= Math.max(20, (parseFloat(netIncome) / parseFloat(grossIncome)) * 150) %>px;">
                            <%= Math.round((parseFloat(netIncome) / parseFloat(grossIncome)) * 100) %>%
                        </div>
                        <div class="bar-label">Net<br>Income</div>
                    </div>
                </div>
            </div>

            <!-- Insights -->
            <div class="insights-grid">
                <div class="insight-card">
                    <div class="insight-number">$<%= parseFloat(grossIncome).toLocaleString('en-US',
                            {minimumFractionDigits: 0, maximumFractionDigits: 0}) %>
                    </div>
                    <div class="insight-label">Gross Income</div>
                </div>
                <div class="insight-card">
                    <div class="insight-number">$<%= parseFloat(taxAmount).toLocaleString('en-US',
                            {minimumFractionDigits: 0, maximumFractionDigits: 0}) %>
                    </div>
                    <div class="insight-label">Tax Amount</div>
                </div>
                <div class="insight-card">
                    <div class="insight-number">$<%= parseFloat(netIncome).toLocaleString('en-US',
                            {minimumFractionDigits: 0, maximumFractionDigits: 0}) %>
                    </div>
                    <div class="insight-label">Net Income</div>
                </div>
                <div class="insight-card">
                    <div class="insight-number">
                        <%= parseFloat(taxRate).toFixed(1) %>%
                    </div>
                    <div class="insight-label">Tax Rate</div>
                </div>
                <div class="insight-card">
                    <div class="insight-number">$<%= (parseFloat(monthlyNet) || parseFloat(netIncome) /
                            12).toLocaleString('en-US', {minimumFractionDigits: 0, maximumFractionDigits: 0}) %>
                    </div>
                    <div class="insight-label">Monthly Net Income</div>
                </div>
                <div class="insight-card">
                    <div class="insight-number">$<%= (parseFloat(weeklyNet) || parseFloat(netIncome) /
                            52).toLocaleString('en-US', {minimumFractionDigits: 0, maximumFractionDigits: 0}) %>
                    </div>
                    <div class="insight-label">Weekly Net Income</div>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="actions-section">
            <a href="/" class="action-btn secondary">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                </svg>
                Calculate Again
            </a>
            <button onclick="window.print()" class="action-btn primary">
                <svg fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                        d="M17 17h2a2 2 0 002-2v-4a2 2 0 00-2-2H5a2 2 0 00-2 2v4a2 2 0 002 2h2m2 4h6a2 2 0 002-2v-4a2 2 0 00-2-2H9a2 2 0 00-2 2v4a2 2 0 002 2zm8-12V5a2 2 0 00-2-2H9a2 2 0 00-2 2v4h10z" />
                </svg>
                Print Results
            </button>
        </div>
    </div>

    <script>
        // Add entrance animations
        document.addEventListener('DOMContentLoaded', function () {
            const cards = document.querySelectorAll('.income-item, .insight-card');
            cards.forEach((card, index) => {
                card.style.animationDelay = `${0.1 + index * 0.1}s`;
                card.classList.add('animate-in');
            });

            // Add subtle hover effects
            const incomeItems = document.querySelectorAll('.income-item');
            incomeItems.forEach(item => {
                item.addEventListener('mouseenter', function () {
                    this.style.transform = 'translateY(-4px) scale(1.02)';
                });

                item.addEventListener('mouseleave', function () {
                    this.style.transform = 'translateY(0) scale(1)';
                });
            });
        });

        // Print functionality
        window.addEventListener('beforeprint', function () {
            document.body.style.background = 'white';
        });

        window.addEventListener('afterprint', function () {
            document.body.style.background = 'var(--bg-gradient)';
        });
    </script>
</body>

</html>